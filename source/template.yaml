AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  gitsha:
    Type: String
    Description: Git sha 
  environment:
    Type: String
    Description: Deployment environment
    Default: "dev"

Metadata:
  AWS::ServerlessRepo::Application:
    Name: login-infra-functions
    Description: Demo
    Author: logindotgov
    SpdxLicenseId: CC0-1.0
    HomePageUrl: https://github.com/18f/identity-infra-functions
    SemanticVersion: 0.0.1
    SourceCodeUrl: https://github.com/18f/identity-infra-functions
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: Application Settings
        Parameters:
          - gitsha
          - environment

Description: >
  identity-infra-functions

  Infrastructure functions for login.gov

Globals:
  Function:
    Timeout: 60
    Runtime: python3.8

Resources:
  WAFAlertFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: WAF-Alert
      Handler: index.lambda_handler
      MemorySize: 128
      AutoPublishAlias: !Ref environment
      DeploymentPreference:
        Type: AllAtOnce
      Layers:
        - !Ref AWSPythonSDKLayer

  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: demo-function/hello_world/
      Handler: app.lambda_handler
      MemorySize: 128
      AutoPublishAlias: !Ref environment
      Runtime: ruby2.7
      DeploymentPreference:
        Type: AllAtOnce
      Layers:
        - !Ref AWSRubySDKLayer
      Environment:
        Variables:
          S3_BUCKET_NAME: !Sub 
            - login-gov-idp-doc-capture-${Environment}.${AccountId}-${Region}
            - Environment: !Ref environment 
              AccountId: !Ref AWS::AccountId
              Region: !Ref AWS::Region
          KMS_KEY_ALIAS: !Sub
            - ${Environment}-idp-doc-capture
            - Environment: !Ref environment
          ENVIRONMENT_NAME: !Ref environment
      Policies:
        - Statement:
          - Sid: S3ObjectAccess
            Effect: Allow
            Action:
            - s3:PutObject
            - s3:GetObject
            - s3:DeleteObject
            Resource: !Sub
              - arn:aws:s3:::login-gov-idp-doc-capture-${Environment}.${AccountId}-${Region}/*
              - Environment: !Ref environment 
                AccountId: !Ref AWS::AccountId
                Region: !Ref AWS::Region
        - Statement:
          - Sid: S3BucketAccess
            Effect: Allow
            Action:
            - s3:ListBucket
            Resource: !Sub
              - arn:aws:s3:::login-gov-idp-doc-capture-${Environment}.${AccountId}-${Region}
              - Environment: !Ref environment 
                AccountId: !Ref AWS::AccountId
                Region: !Ref AWS::Region
        - Statement:
          - Sid: KMS
            Effect: Allow
            Action:
              - kms:GenerateDataKey
              - kms:Encrypt
              - kms:DescribeKey
              - kms:Decrypt
            Resource: !Sub 
              - '{{resolve:ssm:/${Environment}/idp/lambda/upload/kms/arn:1}}'
              - Environment: !Ref environment
      VpcConfig:
        SecurityGroupIds:
          - !GetAtt HelloWorldSecurityGroup.GroupId
        SubnetIds:
          - !Sub 
              - '{{resolve:ssm:/${Environment}/network/subnet/private1/id:1}}'
              - Environment: !Ref environment
          -  !Sub
              - '{{resolve:ssm:/${Environment}/network/subnet/private2/id:1}}'
              - Environment: !Ref environment
          - !Sub
              - '{{resolve:ssm:/${Environment}/network/subnet/private3/id:1}}'
              - Environment: !Ref environment
      Tags:
        environment: !Ref environment

  HelloWorldFunctionArn:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub 
        - /${Environment}/infra/lambda/HelloWorld/arn
        - Environment: !Ref environment
      Value: !GetAtt HelloWorldFunction.Arn
  
  HelloWorldSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub 
        - ${Environment}-HelloWorldFunction
        - Environment: !Ref environment
      VpcId: !Sub
        - '{{resolve:ssm:/${Environment}/network/vpc/id:1}}'
        - Environment: !Ref environment
      GroupDescription: Hello World Lambda Function
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          SourceSecurityGroupId: !Sub 
              - '{{resolve:ssm:/${Environment}/network/securitygroup/idp/id:1}}'
              - Environment: !Ref environment

  ApplicationLambdaArns:
    Type: AWS::SSM::Parameter
    Properties:
      Type: StringList
      Name: !Sub 
        - /${Environment}/infra/lambda/application-functions
        - Environment: !Ref environment
      Value: !Join 
        - ','
        - - !GetAtt WAFAlertFunction.Arn
          - !GetAtt HelloWorldFunction.Arn

  ApplicationLambdaGitSha:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub 
        - /${Environment}/infra/lambda/gitsha
        - Environment: !Ref environment
      Value: !Ref gitsha

  AWSRubySDKLayer:
    Type: "AWS::Serverless::LayerVersion"
    Properties:
      LayerName: !Sub 
        - ${Environment}-infra-ruby-sdk
        - Environment: !Ref environment
      Description: AWS Ruby SDK
      ContentUri: aws-ruby-sdk
      CompatibleRuntimes:
        - ruby2.7
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: ruby2.7

  AWSPythonSDKLayer:
    Type: "AWS::Serverless::LayerVersion"
    Properties:
      LayerName: !Sub 
        - ${Environment}-infra-python-sdk
        - Environment: !Ref environment
      Description: AWS Python SDK
      ContentUri: aws-python-sdk
      CompatibleRuntimes:
        - python3.8
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: python3.8
    
Outputs:
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
  WAFAlertFunction:
    Description: "WAF Alert Function ARN"
    Value: !GetAtt WAFAlertFunction.Arn